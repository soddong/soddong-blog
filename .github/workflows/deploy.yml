name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI/CD Pipeline"]
    types: [completed]
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Vercel
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event.workflow_run.conclusion == 'success')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          NODE_ENV: production
          
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Update deployment status
        if: success()
        run: |
          echo "‚úÖ Deployment successful!"
          echo "üåê Production URL: https://your-domain.com"
          
      - name: Notify on deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          echo "Check the logs above for more details."

  # Optional: Preview deployments for pull requests
  preview:
    runs-on: ubuntu-latest
    name: Deploy Preview
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          NODE_ENV: production
          
      - name: Deploy Preview to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Comment PR with preview URL
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const { context, github } = require('@actions/github');
            const comment = `
            üöÄ **Preview Deployment Ready!**
            
            Your changes have been deployed to a preview environment.
            
            **Preview URL:** [View Preview](https://your-project-preview.vercel.app)
            
            ---
            *This preview will be automatically deleted when the PR is closed.*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Lint and Test Job
  test:
    runs-on: ubuntu-latest
    name: Test and Lint
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Type check
        run: npx tsc --noEmit
        
      - name: Check formatting
        run: npx prettier --check .
        
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Upload build artifacts
        if: matrix.node-version == '20.x' && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
          retention-days: 1

  # Security audit
  security:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level moderate
        
  # Dependency check
  dependency-check:
    runs-on: ubuntu-latest
    name: Dependency Check
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Check for outdated dependencies
        run: npm outdated || true
        
      - name: Check package-lock.json
        run: npm ci --dry-run

  # Performance and bundle analysis
  analyze:
    runs-on: ubuntu-latest
    name: Bundle Analysis
    needs: [test]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build and analyze bundle
        run: |
          npm run build
          npx @next/bundle-analyzer
        env:
          ANALYZE: true
          NODE_ENV: production